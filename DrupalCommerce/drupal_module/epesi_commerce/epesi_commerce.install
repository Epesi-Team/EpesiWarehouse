<?php

/**
 * Implements hook_enable().
 *
 * Rebuilds the feature immediately after it's enabled.
 */
function epesi_commerce_enable() {
  // Rebuild the features static caches.
  features_include(TRUE);

  $module = 'epesi_commerce';
  $feature = feature_load($module);
  $items[$module] = array_keys($feature->info['features']);
  _features_restore('enable', $items);
  _features_restore('rebuild', $items);

  //convert title and description to be translatable
  $name = 'epesi_category';
  $entity_type = 'taxonomy_term';
  foreach (title_field_replacement_info($entity_type) as $legacy_field => $info) {
    title_field_replacement_toggle($entity_type, $name, $legacy_field);
  }
  
  module_load_include('inc', 'commerce_ss', 'includes/commerce_ss.admin');
  commerce_ss_admin_create_instance('commerce_stock', 'number_decimal', TRUE, 'commerce_product', 'epesi_products', t('Stock'));

  $enabled = array_filter(variable_get('entity_translation_entity_types', array()));
  $enabled['taxonomy_term'] = 'taxonomy_term';
  variable_set('entity_translation_entity_types', $enabled);
}

function epesi_commerce_install_endpoint() {
  $endpoint = new stdClass();
  $endpoint->disabled = FALSE; /* Edit this to true to make a default endpoint disabled initially */
  $endpoint->api_version = 3;
  $endpoint->name = 'epesi';
  $endpoint->server = 'rest_server';
  $endpoint->path = 'epesi';
  $endpoint->authentication = array(
    'services' => 'services',
  );
  $endpoint->server_settings = array(
  'formatters' => array(
    'bencode' => TRUE,
    'json' => TRUE,
    'php' => TRUE,
    'xml' => TRUE,
    'jsonp' => FALSE,
  ),
  'parsers' => array(
    'application/json' => TRUE,
    'application/vnd.php.serialized' => TRUE,
    'application/xml' => TRUE,
    'multipart/form-data' => TRUE,
    'text/xml' => TRUE,
    'application/x-www-form-urlencoded' => FALSE,
  ),
  );
  $endpoint->resources = array(
  'product-display' => array(
    'operations' => array(
      'index' => array(
        'enabled' => '1',
      ),
      'retrieve' => array(
        'enabled' => '1',
      ),
    ),
  ),
  'product' => array(
    'operations' => array(
      'index' => array(
        'enabled' => '1',
      ),
      'retrieve' => array(
        'enabled' => '1',
      ),
      'create' => array(
        'enabled' => '1',
      ),
      'update' => array(
        'enabled' => '1',
      ),
      'delete' => array(
        'enabled' => '1',
      ),
    ),
  ),
  'order' => array(
    'operations' => array(
      'index' => array(
        'enabled' => '1',
      ),
      'retrieve' => array(
        'enabled' => '1',
      ),
      'update' => array(
        'enabled' => '1',
      ),
      'delete' => array(
        'enabled' => '1',
      ),
    ),
    'relationships' => array(
      'line-items' => array(
        'enabled' => '1',
      ),
    ),
  ),
  'line-item' => array(
    'operations' => array(
      'index' => array(
        'enabled' => '1',
      ),
      'retrieve' => array(
        'enabled' => '1',
      ),
      'create' => array(
        'enabled' => '1',
      ),
      'update' => array(
        'enabled' => '1',
      ),
      'delete' => array(
        'enabled' => '1',
      ),
    ),
  ),
  'file' => array(
    'operations' => array(
      'create' => array(
        'enabled' => '1',
      ),
    ),
    'actions' => array(
      'create_raw' => array(
        'enabled' => '1',
      ),
    ),
  ),
  'entity_node' => array(
    'operations' => array(
      'retrieve' => array(
        'enabled' => '1',
      ),
      'create' => array(
        'enabled' => '1',
      ),
      'update' => array(
        'enabled' => '1',
      ),
      'delete' => array(
        'enabled' => '1',
      ),
      'index' => array(
        'enabled' => '1',
      ),
    ),
    'relationships' => array(
      'files' => array(
        'enabled' => '1',
      ),
      'comments' => array(
        'enabled' => '1',
      ),
    ),
    'targeted_actions' => array(
      'attach_file' => array(
        'enabled' => '1',
      ),
    ),
  ),
  'entity_taxonomy_term' => array(
    'operations' => array(
      'retrieve' => array(
        'enabled' => '1',
      ),
      'create' => array(
        'enabled' => '1',
      ),
      'update' => array(
        'enabled' => '1',
      ),
      'delete' => array(
        'enabled' => '1',
      ),
      'index' => array(
        'enabled' => '1',
      ),
    ),
    'actions' => array(
      'selectNodes' => array(
        'enabled' => '1',
      ),
    ),
  ),
  'taxonomy_vocabulary' => array(
    'operations' => array(
      'index' => array(
        'enabled' => '1',
      ),
    ),
    'actions' => array(
      'getTree' => array(
        'enabled' => '1',
      ),
    ),
  ),
  'user' => array(
    'operations' => array(
      'retrieve' => array(
        'enabled' => '1',
      ),
    ),
    'actions' => array(
      'login' => array(
        'enabled' => '1',
        'settings' => array(
          'services' => array(
            'resource_api_version' => '1.0',
          ),
        ),
      ),
      'logout' => array(
        'enabled' => '1',
        'settings' => array(
          'services' => array(
            'resource_api_version' => '1.0',
          ),
        ),
      ),
      'token' => array(
        'enabled' => '1',
      ),
    ),
  ),
  'entity_translation' => array(
    'actions' => array(
      'translate' => array(
        'enabled' => '1',
      ),
    ),
  ),
  'epesi_commerce' => array(
    'actions'=> array(
      'get_product_fields' => array(
        'enabled' => '1',
      ),
      'get_node_fields' => array(
        'enabled' => '1',
      ),
    ),
  ),
  'views' => array(
    'operations' => array(
      'retrieve' => array(
        'enabled' => '1',
      ),
    ),
  ),
  );
  $endpoint->debug = 0;

  services_endpoint_save($endpoint);
}

/**
 * Implements of hook_install()
 */
function epesi_commerce_install() {
  db_update('system')
    ->fields(array('weight' => 10))
    ->condition('name', 'epesi_commerce')
    ->execute();
  epesi_commerce_install_endpoint();
}

function epesi_commerce_update_7100() {
  epesi_commerce_install_endpoint();
  features_revert(array('epesi_commerce'=>array('field')));
}
